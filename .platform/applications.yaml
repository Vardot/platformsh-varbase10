# This file describes two applications. You can have multiple applications
# in the same project.
#
# 
# See https://docs.platform.sh/create-apps/multi-app/project-structure.html#unified-app-configuration
#
# --------------------------------------------------------------------------------------
# - `varbase:http` A PHP application ( active by default)
# - `storybook:http` A Nodejs application ( Uncomment on noted places to start a storybook in development or staging.
#                                           NOT for production environments.)
# --------------------------------------------------------------------------------------

# The name of this app. Must be unique within a project.
-   name: varbase
    # The runtime the application uses.
    type: php:8.1
    source:
        root: "/"
    dependencies:
        php:
            "composer/composer": "~2.0"
            "drush/drush": "~11.0"
    runtime:
        # Enable the redis extension so Drupal can communicate with the Redis cache.
        extensions:
            - redis
            - sodium
            - apcu
            - blackfire
            - yaml
            - imagick
            - memcached
            - imap
            - pspell
            - tidy
            - readline
            - xsl
    # The relationships of the application with services or other applications.
    #
    # The left-hand side is the name of the relationship as it will be exposed
    # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
    # side is in the form `<service name>:<endpoint name>`.
    relationships:
        database: 'db:mysql'
        redis: 'cache:redis'

    # The size of the persistent disk of the application (in MB).
    disk: 2048

    # The 'mounts' describe writable, persistent filesystem mounts in the application. 
    mounts:
        # The default Drupal files directory.
        '/docroot/sites/default/files':
            source: local
            source_path: 'files'
        # Drupal gets its own dedicated tmp directory. The settings.platformsh.php
        # file will automatically configure Drupal to use this directory.
        '/tmp':
            source: local
            source_path: 'tmp'
        # Private file uploads are stored outside the web root. The settings.platformsh.php
        # file will automatically configure Drupal to use this directory.
        '/private':
            source: local
            source_path: 'private'
        # Drush needs a scratch space for its own caches.
        '/.drush':
            source: local
            source_path: 'drush'
        # Drush will try to save backups to this directory, so it must be
        # writeable even though you will almost never need to use it.
        '/drush-backups':
            source: local
            source_path: 'drush-backups'
        # Drupal Console will try to save backups to this directory, so it must be
        # writeable even though you will almost never need to use it.
        '/.console':
            source: local
            source_path: 'console'

    # Configuration of the build of this application.
    build:
        flavor: composer

    # The hooks executed at various points in the lifecycle of the application.
    hooks:
        # The build hook runs after Composer to finish preparing up your code.
        # No services are available but the disk is writeable.
        build: |
            set -e
        # The deploy hook runs after your application has been deployed and started.
        # Code cannot be modified at this point but the database is available.
        # The site is not accepting requests while this script runs so keep it
        # fast.
        deploy: |
            set -e
            php ./drush/platformsh_generate_drush_yml.php
            # if drupal is installed, will call the following drush commands:
            #   - `cache-rebuild`
            #   - `updatedb`
            #   - and if config files are present, `config-import`
            cd docroot
            bash $PLATFORM_APP_DIR/drush/platformsh_deploy_drupal.sh

    # The configuration of app when it is exposed to the web.
    web:
        locations:
            # All requests not otherwise specified follow these rules.
            '/':
                # The folder from which to serve static assets, for this location.
                #
                # This is a filesystem path, relative to the application root.
                root: 'docroot'
                expires: 5m
                passthru: '/index.php'
                allow: false
                rules:
                    '\.(jpe?g|png|gif|svgz?|css|js|map|ico|bmp|eot|woff2?|otf|ttf)$':
                        allow: true
                    '^/robots\.txt$':
                        allow: true
                    '^/sitemap\.xml$':
                        allow: true
                    '^/sites/sites\.php$':
                        scripts: false
                    '^/sites/[^/]+/settings.*?\.php$':
                        scripts: false
                # -------------------------------------------------------------
                #   Uncomment the following when start a storybook in development or staging
                #         NOT for production environments.
                #
                #    Follow with Integration of Varbase with Storybook
                #    https://docs.varbase.vardot.com/v/10.0.x/developers/theme-development-with-varbase/integration-of-varbase-with-storybook
                #
                #         This will allow for origin
                # -------------------------------------------------------------
                #    headers:
                #        Access-Control-Allow-Origin: "*"
                #        Access-Control-Expose-Headers: "true"
                #        Access-Control-Max-Age: "false"
                #        Access-Control-Allow-Credentials: "true"
            '/docroot/sites/default/files':
                allow: true
                expires: 5m
                passthru: '/index.php'
                root: 'docroot/sites/default/files'
                scripts: false
                rules:
                    '^/docroot/sites/default/files/(css|js)':
                    expires: 2w
            # -------------------------------------------------------------
            #   Uncomment the following when start a storybook in development or staging
            #         NOT for production environments.
            #
            #    Follow with Integration of Varbase with Storybook
            #    https://docs.varbase.vardot.com/v/10.0.x/developers/theme-development-with-varbase/integration-of-varbase-with-storybook
            #
            #         This will allow for origin
            # -------------------------------------------------------------
            #    headers:
            #        Access-Control-Allow-Origin: "*"
            #        Access-Control-Expose-Headers: "true"
            #        Access-Control-Max-Age: "false"
            #        Access-Control-Allow-Credentials: "true"
    crons:
        varbase:
            spec: '*/19 * * * *'
            commands:
                start: 'cd docroot ; drush core-cron'

# -------------------------------------------------------------
#   Uncomment the following when start a storybook in development or staging
#         NOT for production environments.
#
#    Follow with Integration of Varbase with Storybook
#    https://docs.varbase.vardot.com/v/10.0.x/developers/theme-development-with-varbase/integration-of-varbase-with-storybook
#
#         This will allow for a start of a storybook:http upstream
# -------------------------------------------------------------
# -   name: storybook
#     type: 'nodejs:18'
#     source:
#         root: "/"
#     dependencies:
#         php:
#             "composer/composer": "~2.0"
#         nodejs:
#             npm: "^6.10"
#             node: "^18.17"
#             yarn: "^1.22"
#     disk: 512
#     build:
#         flavor: none
#     variables:
#         env:
#             NODE_OPTIONS: --max-old-space-size=4096
#             STORYBOOK_CL_SERVER_DOMAIN: 'varbase.local'
#     hooks:
#         build: |
#             set -e
#             cd $PLATFORM_APP_DIR
#             composer install --ignore-platform-reqs --no-scripts
#             yarn install --frozen-lockfile
#             yarn storybook:build
#         post_deploy: |
#             cd $PLATFORM_APP_DIR/.storybook/
#             export STORYBOOK_CL_SERVER_DOMAIN=$(node setup-storybook.js)
#             echo "STORYBOOK_CL_SERVER_DOMAIN: $STORYBOOK_CL_SERVER_DOMAIN"
#     web:
#         locations:
#             '/':
#                 root: 'storybook'
#                 passthru: true
#                 index: ["index.html"]
#                 allow: true
#                 headers:
#                     Access-Control-Allow-Origin: "*"
#                     Access-Control-Expose-Headers: "true"
#                     Access-Control-Max-Age: "false"
#                     Access-Control-Allow-Credentials: "true"
#         commands:
#             start: |
#                 sleep infinity
